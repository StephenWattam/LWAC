---
:server:
  :address: "127.0.0.1"
  :port: 27400
  :service_name: :downloader
:network:
  :connect_timeout: 20                  # How long we give the socket to respond
  :minimum_reconnect_time: 10           # The minimum time we take before trying again
  :maximum_reconnect_time: 240          # The maximum time we take before trying again
  :connect_failure_penalty: 10          # The amount we wait extra each time it fails.
:client:
  :uuid_salt: "LOCAL"
  :batch_capacity: 1000
:worker_pool:
  :simultaneous_workers: 50
  :body_not_text_placeholder: "<not text>"
    # ----
  :fix_encoding: true                                       # Attempt to set the string encoding of results?
  :target_encoding: UTF-8                                   # Target encoding
  :encoding_options: # options supported see http://ruby-doc.org/core-1.9.3/String.html#method-i-encode
    :invalid: :replace                      # If value is :replace , replaces invalid chars with the :replace char.
    :undef: :replace                     # if value if :replace , replaces undefined chars with the :replace char 
    #:replace: '?'                      # the char to use in replacement, defaults to uFFFD for unicode and '?' for other targets
    #:fallback:                         # some object supporting [], to look up [invalid char in source encoding] = valid char in destination encoding  
      #'from': 'to'
      #'from2': 'to2'
    #:xml: :attr                        # either :text or :attr.  If :text, replaces things with hex entities, if :attr, it also quotes the entities "&quot;"
    #:cr_newline: true                  # Replaces LF(\n) with CR(\r) if true
    #:crlf_newline:                     # Replaces LF(\n) with CRLF(\r\n) if true
    :universal_newline: true            # Replaces CRLF(\r\n) and CR(\r) with LF(\n) if true
    # ----
  :curl_workers:
    :max_redirects: 5
    :useragent: ! '"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.11) Gecko/20101012 Firefox/3.6.11"'
    :follow_location: true
    :timeout: 60
    :connect_timeout: 10
    :dns_cache_timeout: 10
    :ftp_response_timeout: 10
:logging:
  :progname: Client 
  :logs:
    :default:
      :dev: STDOUT                                                # STDOUT, STDERR or a filename are supported
      :level: :debug                                                 # level to debug at
    #:errors:
      #:dev: 'logs/client.err'
      #:level: :warn                                              
    :file_log:
      :dev: 'logs/client.log'
      :level: :info
