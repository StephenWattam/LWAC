#!/usr/bin/env ruby

# -----------------------------------------------------------------------------
# Load the launch tools and check gem prerequisites
require 'lwac'
require 'lwac/shared/launch_tools'
require 'lwac/shared/identity'

# Load config using launch_tools
tool, config = LWAC.load_config 

# Announce version
LWAC::Identity::announce_version

# Summarise logs
$log.summarise_logging

# -----------------------------------------------------------------------------
# do stuff

case tool
  # ---------------------------------------------------------------------------
  #  Server
  # ---------------------------------------------------------------------------
  when :server
    require 'lwac/server'
    require 'lwac/server/rpc_server'
      
    # Fire up the server
    server = LWAC::DownloadServer.new(config)
    proxy = LWAC::DownloadService.new(server)
    
    # construct the rpc handler
    rpc = LWAC::RPCServer.new( proxy, config[:server][:port], :marshal )   # TODO: more serialisation formats and interface option

    # listen
    loop{
      begin
        rpc.listen
      rescue StandardError => e
        $log.error "Error: #{e}"
        $log.debug "#{e.backtrace.join("\n")}"
      end

      $log.info "Restarting server after a short delay..."
      sleep(1)
    }

    # Ensure we exit cleanly after EM's done
    server.close


  # ---------------------------------------------------------------------------
  #  Client
  # ---------------------------------------------------------------------------
  when :client
    require 'lwac/client'

    # Start the client going
    dc = LWAC::DownloadClient.new(config)

    # download
    dc.work



  # ---------------------------------------------------------------------------
  #  Import Tool 
  # ---------------------------------------------------------------------------
  when :import
    file = nil
    if ARGV[2] and File.exist?(ARGV[2]) and File.readable?(ARGV[2]) then
      file = ARGV[2]
    else
      $log.fatal "Cannot read file to import: #{file}" if ARGV[2]
      $log.fatal "Please provide a file to import!" if not ARGV[2]
      exit(1)
    end


    require 'lwac/import'

    begin
      im = LWAC::Importer.new(config)
      im.import(file)
    rescue StandardError => e
      $log.fatal "#{e.to_s}"
      $log.debug "#{e.backtrace.join("\n")}"
    end



  # ---------------------------------------------------------------------------
  #  Export Tool
  # ---------------------------------------------------------------------------
  when :export
    require 'lwac/export'

    # Construct the exporter object and load stuff from disk
    ex = LWAC::Exporter.new(config)

    # Dump stuff back to disk
    ex.export


  # ---------------------------------------------------------------------------
  #  Else...
  # ---------------------------------------------------------------------------
  else
    $log.error "Unknown tool: #{tool}."
    $log.error "The code should also never reach this statement unless something is wrong."
    exit(1)
end


